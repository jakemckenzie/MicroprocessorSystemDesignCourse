


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             prog, CODE, READONLY
    2 00000000                 EXPORT           __main
    3 00000000                 ENTRY
    4 00000000         __main                               ;Jake McKenzie 
    5 00000000 481A            LDR              R0, =src    ;initialize src[]
    6 00000002 4A1B            LDR              R2, =dst    ;initialize dst[]
    7 00000004 F810 1B01       LDRB             R1, [R0], #1 ;post increment lo
                                                            ad register
    8 00000008         
    9 00000008 F04F 030A       MOV              R3, #0xA    ;move 0xA into R3
   10 0000000C F04F 0441       MOV              R4, #0x41   ;move 0x41 into R3
   11 00000010 428B            CMP              R3, R1      ;R3 == R1
   12 00000012 BF08            IT               EQ          ;if(R3 == R1)
   13 00000014 F802 4B01       STRBEQ           R4, [R2], #1 ;
   14 00000018 F810 1B01       LDRB             R1, [R0], #1 ;load R0 into loca
                                                            tion of R1(post inc
                                                            rement)
   15 0000001C         
   16 0000001C F04F 0305       MOV              R3, #0x5    ;move 0x5 into R3
   17 00000020 F04F 0435       MOV              R4, #0x35   ;move 0x35 into R3
   18 00000024 428B            CMP              R3, R1      ;R3 == R1
   19 00000026 BF08            IT               EQ          ;if(R3 == R1)
   20 00000028 F802 4B01       STRBEQ           R4, [R2], #1 ;Store R4 into R2(
                                                            post increment)
   21 0000002C F810 1B01       LDRB             R1, [R0], #1 ;load R0 into loca
                                                            tion of R1(post inc
                                                            rement)
   22 00000030         
   23 00000030 F04F 030F       MOV              R3, #0xF    ;move 0xF into R3
   24 00000034 F04F 0446       MOV              R4, #0x46   ;move 0x46 into R3
   25 00000038 428B            CMP              R3, R1      ;R3 == R1
   26 0000003A BF08            IT               EQ          ;if(R3 == R1)
   27 0000003C F802 4B01       STRBEQ           R4, [R2], #1 ;Store R4 into R2(
                                                            post increment)
   28 00000040 F810 1B01       LDRB             R1, [R0], #1 ;load R0 into loca
                                                            tion of R1(post inc
                                                            rement)
   29 00000044         
   30 00000044 F04F 030B       MOV              R3, #0xB    ;move 0xB into R3
   31 00000048 F04F 0442       MOV              R4, #0x42   ;move 0x42 into R3
   32 0000004C 428B            CMP              R3, R1      ;R3 == R1
   33 0000004E BF08            IT               EQ          ;if(R3 == R1)
   34 00000050 F802 4B01       STRBEQ           R4, [R2], #1 ;Store R4 into R2(
                                                            post increment)
   35 00000054 F810 1B01       LDRB             R1, [R0], #1 ;load R0 into loca
                                                            tion of R1(post inc
                                                            rement)
   36 00000058         
   37 00000058 F04F 0303       MOV              R3, #0x3    ;move 0x3 into R3
   38 0000005C F04F 0433       MOV              R4, #0x33   ;move 0x33 into R3
   39 00000060 428B            CMP              R3, R1      ;R3 == R1
   40 00000062 BF08            IT               EQ          ;if(R3 == R1)
   41 00000064 F802 4B01       STRBEQ           R4, [R2], #1 ;Store R4 into R2(
                                                            post increment)
   42 00000068 7801            LDRB             R1, [R0]    ;load R0 into locat
                                                            ion of R1
   43 0000006A         
   44 0000006A E7FE    STOP    B                STOP
   45 0000006C                 ALIGN



ARM Macro Assembler    Page 2 


   46 0000006C 00000000 
              00000000         AREA             A,DATA,READONLY
   47 00000000 0A 05 0F 
              0B 03    src     DCB              0xA, 0x5, 0xF, 0xB, 0x3
   48 00000005 00 00 00        ALIGN
   49 00000008                 AREA             Z, DATA, READWRITE
   50 00000000 00 00 00 
              00 00    dst     DCB              0x0, 0x0, 0x0, 0x0, 0x0
   51 00000005 00 00 00        ALIGN
   52 00000008                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\problem3.d -o.\objects\problem3.o -I.\RTE\_Target_1 -
IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\A
RM\CMSIS\5.4.0\Device\ARM\ARMCM4\Include --predefine="__EVAL SETA 1" --predefin
e="__UVISION_VERSION SETA 526" --predefine="_RTE_ SETA 1" --predefine="ARMCM4_F
P SETA 1" --list=.\listings\problem3.lst problem3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STOP 0000006A

Symbol: STOP
   Definitions
      At line 44 in file problem3.s
   Uses
      At line 44 in file problem3.s
Comment: STOP used once
__main 00000000

Symbol: __main
   Definitions
      At line 4 in file problem3.s
   Uses
      At line 2 in file problem3.s
Comment: __main used once
prog 00000000

Symbol: prog
   Definitions
      At line 1 in file problem3.s
   Uses
      None
Comment: prog unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

A 00000000

Symbol: A
   Definitions
      At line 46 in file problem3.s
   Uses
      None
Comment: A unused
src 00000000

Symbol: src
   Definitions
      At line 47 in file problem3.s
   Uses
      At line 5 in file problem3.s
Comment: src used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Z 00000000

Symbol: Z
   Definitions
      At line 49 in file problem3.s
   Uses
      None
Comment: Z unused
dst 00000000

Symbol: dst
   Definitions
      At line 50 in file problem3.s
   Uses
      At line 6 in file problem3.s
Comment: dst used once
2 symbols
344 symbols in table
