


ARM Macro Assembler    Page 1 


    1 00000000 00000400 
                       Stack1  EQU              0x400
    2 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
 =3
    3 00000000         MyStackMem
                               SPACE            Stack1
    4 00000400                 AREA             RESET , READONLY ; I couldn't f
                                                            igure out how to ge
                                                            t the main
    5 00000000 00000400        DCD              MyStackMem + Stack1 ; stack poi
                                                            nter for empty stac
                                                            k 
    6 00000004                 AREA             MyData, DATA, READWRITE
    7 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       dst     SPACE            0x10
    8 00000010                 AREA             MYCODE, CODE, READONLY
    9 00000000 57 65 6C 
              63 6F 6D 
              65 20 74 
              6F 20 4D 
              69 63 72 
              6F 70 72 
              6F 63 65 
              73 73 6F 
              72 20 53 
              79 73 74 
              65 6D 73 
              20 43 6F 
              75 72 73 
              65 2E 00 src     DCB              "Welcome to Microprocessor Syst
ems Course.", 0
   10 0000002A 00 00           ALIGN
   11 0000002C                 ENTRY
   12 0000002C                 EXPORT           __main
   13 0000002C         __main
   14 0000002C F04F 0400       MOV              R4, #0x0
   15 00000030 4813            LDR              R0, =src
   16 00000032 4A14            LDR              R2 , =dst
   17 00000034 7801            LDRB             R1, [R0]
   18 00000036         loop
   19 00000036 2920            CMP              R1, #0x20   ; First enumerate t
                                                            he number of (check
                                                             for space)
   20 00000038 D009            BEQ              loop1       ; elements in the s
                                                            ource array
   21 0000003A 292E            CMP              R1, #0x2E   ; check for period
   22 0000003C D007            BEQ              loop1
   23 0000003E 2943            CMP              R1, #0x43
   24 00000040 D018            BEQ              eof
   25 00000042 F104 0401       ADD              R4, #1      ; store size of str
                                                            ing
   26 00000046 4626            MOV              R6, R4
   27 00000048 F810 1F01       LDRB             R1, [R0, #1]! ; load R1 into R0
                                                             preincrement
   28 0000004C E7F3            B                loop



ARM Macro Assembler    Page 2 


   29 0000004E         loop1
   30 0000004E F810 1D01       LDRB             R1, [R0 , #-1]! ; Start with th
                                                            e last element of
   31 00000052 7011            STRB             R1, [R2]    ; source array and 
                                                            store element
   32 00000054 F102 0201       ADD              R2, #1      ; by element
   33 00000058 3C01            SUBS             R4, #1      ; for(i = size; i >
                                                            = 0; i--)
   34 0000005A D1F8            BNE              loop1
   35 0000005C 292E            CMP              R1, #0x2E
   36 0000005E BF18            IT               NE
   37 00000060 2520            MOVNE            R5, #0x20
   38 00000062 BF1F F802 
              5B01             STRBNE           R5, [R2], #1
   39 00000068 1830            ADDNE            R0, R6, R0
   40 0000006A 3001            ADDNE            R0, #1
   41 0000006C 2400            MOVNE            R4, #0x0
   42 0000006E BF18 2600       MOVNE            R6, #0x0
   43 00000072 D1E0            BNE              loop
   44 00000074         eof
   45 00000074 F04F 092E       MOV              R9, #0x2E
   46 00000078 F802 9C01       STRB             R9, [R2, #-1]
   47 0000007C E7FF            B                eof1
   48 0000007E E7FE    eof1    B                eof1
   49 00000080                 ALIGN
   50 00000080                 END
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\problem2.d -o.\objects\problem2.o -I.\RTE\_Target_1 -
IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\A
RM\CMSIS\5.4.0\Device\ARM\ARMCM4\Include --predefine="__EVAL SETA 1" --predefin
e="__UVISION_VERSION SETA 526" --predefine="_RTE_ SETA 1" --predefine="ARMCM4_F
P SETA 1" --list=.\listings\problem2.lst problem2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyStackMem 00000000

Symbol: MyStackMem
   Definitions
      At line 3 in file problem2.s
   Uses
      At line 5 in file problem2.s
Comment: MyStackMem used once
STACK 00000000

Symbol: STACK
   Definitions
      At line 2 in file problem2.s
   Uses
      None
Comment: STACK unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 4 in file problem2.s
   Uses
      None
Comment: RESET unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyData 00000000

Symbol: MyData
   Definitions
      At line 6 in file problem2.s
   Uses
      None
Comment: MyData unused
dst 00000000

Symbol: dst
   Definitions
      At line 7 in file problem2.s
   Uses
      At line 16 in file problem2.s
Comment: dst used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MYCODE 00000000

Symbol: MYCODE
   Definitions
      At line 8 in file problem2.s
   Uses
      None
Comment: MYCODE unused
__main 0000002C

Symbol: __main
   Definitions
      At line 13 in file problem2.s
   Uses
      At line 12 in file problem2.s
Comment: __main used once
eof 00000074

Symbol: eof
   Definitions
      At line 44 in file problem2.s
   Uses
      At line 24 in file problem2.s
Comment: eof used once
eof1 0000007E

Symbol: eof1
   Definitions
      At line 48 in file problem2.s
   Uses
      At line 47 in file problem2.s
      At line 48 in file problem2.s

loop 00000036

Symbol: loop
   Definitions
      At line 18 in file problem2.s
   Uses
      At line 28 in file problem2.s
      At line 43 in file problem2.s

loop1 0000004E

Symbol: loop1
   Definitions
      At line 29 in file problem2.s
   Uses
      At line 20 in file problem2.s
      At line 22 in file problem2.s
      At line 34 in file problem2.s

src 00000000

Symbol: src
   Definitions
      At line 9 in file problem2.s
   Uses
      At line 15 in file problem2.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: src used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Stack1 00000400

Symbol: Stack1
   Definitions
      At line 1 in file problem2.s
   Uses
      At line 3 in file problem2.s
      At line 5 in file problem2.s

1 symbol
350 symbols in table
